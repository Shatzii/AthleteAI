version: '3.8'

services:
  go4it-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    expose:
      - "5000"
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo:27017/go4it
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
    env_file:
      - .env
    depends_on:
      - mongo
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  api-gateway:
    build:
      context: ./backend
      dockerfile: Dockerfile.gateway
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - BACKEND_URL=http://go4it-backend:5000
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3000}
    depends_on:
      - go4it-backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  go4it-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    expose:
      - "80"
    environment:
      - REACT_APP_API_URL=http://go4it-backend:5000/api
      - NODE_ENV=production
    depends_on:
      - go4it-backend
    restart: unless-stopped

  mongo:
    image: mongo:5.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-changeme123}
      - MONGO_INITDB_DATABASE=go4it
    volumes:
      - mongo_data:/data/db
      - ./docker/mongo-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme456}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - go4it-frontend
      - go4it-backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongo_data:
  redis_data:
  nginx_logs:
